_M={}local a=0x07;local b=0x08;function _M.parse_camera_settings(c)local d={10,25,50,100}local e={'SPOT','CENTER_WEIGHTED','AVERAGE'}local f={}f.quality=d[string.byte(c,1)+1]f.auto=string.byte(c,2)>0;if f.auto==true then f.auto_exp_gain_times=string.byte(c,2)f.auto_exp_interval=string.byte(c,3)/1000.0;f.metering=e[string.byte(c,4)+1]f.exposure=string.byte(c,5)/255.0;f.exposure_speed=string.byte(c,6)/255.0;f.shutter_limit=string.byte(c,7)<<8|(string.byte(c,8)&0x3FFF)f.analog_gain_limit=string.byte(c,9)&0xFF;f.white_balance_speed=string.byte(c,10)/255.0 else f.manual_shutter=string.byte(c,11)<<8|(string.byte(c,12)&0x3FFF)f.manual_analog_gain=string.byte(c,13)&0xFF;f.manual_red_gain=string.byte(c,14)<<8|(string.byte(c,15)&0x3FF)f.manual_green_gain=string.byte(c,16)<<8|(string.byte(c,17)&0x3FF)f.manual_blue_gain=string.byte(c,18)<<8|(string.byte(c,19)&0x3FF)end;return f end;function send_data(c)local g=false;local h=0;local i=frame.time.utc()+2;while frame.time.utc()<i do if pcall(frame.bluetooth.send,c)then g=true;break else h=h+1 end end;if not g then error('Error sending photo data')end end;function _M.camera_capture_and_send(j)local k=j.quality or 50;if j.auto then local l=j.auto_exp_gain_times or 0;local m=j.auto_exp_interval or 0.1;local n=j.metering or'AVERAGE'local o=j.exposure or 0.18;local p=j.exposure_speed or 0.5;local q=j.shutter_limit or 800;local r=j.analog_gain_limit or 248.0;local s=j.white_balance_speed or 0.5;for t=1,l,1 do frame.camera.auto{metering=n,exposure=o,exposure_speed=p,shutter_limit=q,analog_gain_limit=r,white_balance_speed=s}frame.sleep(m)end else local u=j.manual_shutter or 800;local v=j.manual_analog_gain or 100;local w=j.manual_red_gain or 512;local x=j.manual_green_gain or 512;local y=j.manual_blue_gain or 512;frame.camera.set_shutter(u)frame.camera.set_gain(v)frame.camera.set_white_balance(w,x,y)frame.sleep(0.1)end;frame.camera.capture{quality_factor=k}while not frame.camera.image_ready()do frame.sleep(0.05)end;local c=''while true do c=frame.camera.read_raw(frame.bluetooth.max_length()-1)if c~=nil then send_data(string.char(a)..c)else send_data(string.char(b))break end end end;return _M