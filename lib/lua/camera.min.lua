local a={}local b=0x07;local c=0x08;local d={'VERY_LOW','LOW','MEDIUM','HIGH','VERY_HIGH'}local e={'SPOT','CENTER_WEIGHTED','AVERAGE'}local f={metering='AVERAGE',exposure=0.18,exposure_speed=0.5,shutter_limit=800,analog_gain_limit=248.0,white_balance_speed=0.5}local g={shutter=800,analog_gain=100,red_gain=512,green_gain=512,blue_gain=512}a.is_auto_exp=true;function update_if_present(h,i)for j,k in pairs(i)do if k~=nil then h[j]=k end end end;function a.set_auto_exp_settings(l)update_if_present(f,l)a.is_auto_exp=true end;function a.set_manual_exp_settings(l)a.is_auto_exp=false;update_if_present(g,l)frame.camera.set_shutter(g.shutter)frame.camera.set_gain(g.analog_gain)frame.camera.set_white_balance(g.red_gain,g.green_gain,g.blue_gain)end;function a.parse_auto_exp_settings(m)local h={}h.metering=e[string.byte(m,1)+1]h.exposure=string.byte(m,2)/255.0;h.exposure_speed=string.byte(m,3)/255.0;h.shutter_limit=string.byte(m,4)<<8|(string.byte(m,5)&0x3FFF)h.analog_gain_limit=string.byte(m,6)&0xFF;h.white_balance_speed=string.byte(m,7)/255.0;return h end;function a.parse_manual_exp_settings(m)local h={}h.shutter=string.byte(m,1)<<8|(string.byte(m,2)&0x3FFF)h.analog_gain=string.byte(m,3)&0xFF;h.red_gain=string.byte(m,4)<<8|(string.byte(m,5)&0x3FF)h.green_gain=string.byte(m,6)<<8|(string.byte(m,7)&0x3FF)h.blue_gain=string.byte(m,8)<<8|(string.byte(m,9)&0x3FF)return h end;function a.parse_capture_settings(m)local h={}h.quality=d[string.byte(m,1)+1]local n=string.byte(m,2)<<8|string.byte(m,3)h.resolution=n*2;local o=string.byte(m,4)<<8|string.byte(m,5)h.pan=o-140;h.raw=string.byte(m,6)>0;return h end;function send_data(m)local p=false;local q=0;local r=frame.time.utc()+2;while frame.time.utc()<r do if pcall(frame.bluetooth.send,m)then p=true;break else q=q+1 end end;if not p then error('Error sending photo data')end end;function a.run_auto_exposure()frame.camera.auto{f}end;function a.capture_and_send(l)frame.camera.capture{resolution=l.resolution,quality=l.quality,pan=l.pan}while not frame.camera.image_ready()do frame.sleep(0.005)end;local m=''local s=l.raw;while true do if s then m=frame.camera.read_raw(frame.bluetooth.max_length()-1)else m=frame.camera.read(frame.bluetooth.max_length()-1)end;if m~=nil then send_data(string.char(b)..m)else send_data(string.char(c))break end end end;return a