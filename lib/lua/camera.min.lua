_M={}local a=0x07;local b=0x08;function _M.parse_camera_settings(c)local d={10,25,50,100}local e={'SPOT','CENTER_WEIGHTED','AVERAGE'}local f={}f.quality=d[string.byte(c,1)+1]f.auto=string.byte(c,2)>0;if f.auto==true then f.auto_exp_gain_times=string.byte(c,2)f.auto_exp_interval=string.byte(c,3)/1000.0;f.metering=e[string.byte(c,4)+1]f.exposure=string.byte(c,5)/255.0;f.exposure_speed=string.byte(c,6)/255.0;f.shutter_limit=string.byte(c,7)<<8|(string.byte(c,8)&0x3FFF)f.analog_gain_limit=string.byte(c,9)&0xFF;f.white_balance_speed=string.byte(c,10)/255.0 else f.manual_shutter=string.byte(c,11)<<8|(string.byte(c,12)&0x3FFF)f.manual_analog_gain=string.byte(c,13)&0xFF;f.manual_red_gain=string.byte(c,14)<<8|(string.byte(c,15)&0x3FF)f.manual_green_gain=string.byte(c,16)<<8|(string.byte(c,17)&0x3FF)f.manual_blue_gain=string.byte(c,18)<<8|(string.byte(c,19)&0x3FF)end;return f end;function _M.camera_capture_and_send(g)local h=g.quality or 50;if g.auto then local i=g.auto_exp_gain_times or 0;local j=g.auto_exp_interval or 0.1;local k=g.metering or'AVERAGE'local l=g.exposure or 0.18;local m=g.exposure_speed or 0.5;local n=g.shutter_limit or 800;local o=g.analog_gain_limit or 248.0;local p=g.white_balance_speed or 0.5;for q=1,i,1 do frame.camera.auto{metering=k,exposure=l,exposure_speed=m,shutter_limit=n,analog_gain_limit=o,white_balance_speed=p}frame.sleep(j)end else local r=g.manual_shutter or 800;local s=g.manual_analog_gain or 100;local t=g.manual_red_gain or 512;local u=g.manual_green_gain or 512;local v=g.manual_blue_gain or 512;frame.camera.set_shutter(r)frame.camera.set_gain(s)frame.camera.set_white_balance(t,u,v)end;frame.sleep(0.1)frame.camera.capture{quality_factor=h}while not frame.camera.image_ready()do frame.sleep(0.05)end;local w=0;local c=''while true do c=frame.camera.read_raw(frame.bluetooth.max_length()-4)if c~=nil then pcall(frame.bluetooth.send,string.char(a)..c)w=w+string.len(c)frame.sleep(0.0125)else pcall(frame.bluetooth.send,string.char(b))frame.sleep(0.0125)break end end end;return _M